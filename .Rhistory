##                                          "%d/%m/%Y %H:%M:%S") })
with(ass1c, plot(date.time, as.numeric(Global_active_power), main="", ylab="Global Active Power (kilowatts)", type="n"))
ass1c <- within(ass1a, { date.time=as.POSIXct(paste(Date, Time), "%d/%m/%Y %H:%M:%S") })
ass1c[2880,"date.time"]
?POSIXct
with(ass1c, plot(date.time, as.numeric(Global_active_power), main="", ylab="Global Active Power (kilowatts)", type="n"))
with(ass1c, plot(date.time, as.numeric(Global_active_power), main="", xlab="", ylab="Global Active Power (kilowatts)", type="n"))
with(ass1c, lines(date.time, as.numeric(Global_active_power)))
with(ass1c, plot(date.time, as.numeric(Sub_metering_1), main="", xlab="", ylab="Energy sub metering", type="n"))
with(ass1c, lines(date.time, as.numeric(Sub_metering_1), col="black"))
with(ass1c, lines(date.time, as.numeric(Sub_metering_2), col="red"))
with(ass1c, lines(date.time, as.numeric(Sub_metering_3), col="blue"))
legend("topright", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
par()
?par
legend("topright", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1)
with(ass1c, plot(date.time, as.numeric(Sub_metering_1), main="", xlab="",
ylab="Energy sub metering", type="n"))
with(ass1c, lines(date.time, as.numeric(Sub_metering_1), col="black"))
with(ass1c, lines(date.time, as.numeric(Sub_metering_2), col="red"))
with(ass1c, lines(date.time, as.numeric(Sub_metering_3), col="blue"))
legend("topright", col=c("black", "red", "blue"),
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1)
x <- rpois(100,3)
y <- rnorm(100)
plot(x,y)
x <- rpois(100,3)
y <- rnorm(100)
plot(x,y)
x <- rpois(100,3)
y <- rnorm(100)
plot(x,y)
x <- rpois(100,3)
y <- rnorm(100)
plot(x,y)
par(mfrow = c(2, 2))
with(ass1c, {
plot(date.time, as.numeric(Sub_metering_1), main="", xlab="",
ylab="Energy sub metering", type="n")
lines(date.time, as.numeric(Sub_metering_1), col="black")
lines(date.time, as.numeric(Sub_metering_2), col="red")
lines(date.time, as.numeric(Sub_metering_3), col="blue")
})
legend("topright", col=c("black", "red", "blue"),
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1)
with(ass1c, {
plot(date.time, as.numeric(Sub_metering_1), main="", xlab="",
ylab="Energy sub metering", type="n")
lines(date.time, as.numeric(Sub_metering_1), col="black")
lines(date.time, as.numeric(Sub_metering_2), col="red")
lines(date.time, as.numeric(Sub_metering_3), col="blue")
})
legend("topright", col=c("black", "red", "blue"),
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1)
with(ass1c, plot(date.time, as.numeric(Sub_metering_1), main="", xlab="", ylab="Energy sub metering", type="n"))
par
?par
?legend
with(ass1c, {
plot(date.time, as.numeric(Sub_metering_1), main="", xlab="",
ylab="Energy sub metering", type="n")
lines(date.time, as.numeric(Sub_metering_1), col="black")
lines(date.time, as.numeric(Sub_metering_2), col="red")
lines(date.time, as.numeric(Sub_metering_3), col="blue")
})
legend("topright", col=c("black", "red", "blue"),
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1,
border="transparent")
with(ass1c, plot(date.time, as.numeric(Sub_metering_1), main="", xlab="", ylab="Energy sub metering", type="n"))
with(ass1c, {
plot(date.time, as.numeric(Sub_metering_1), main="", xlab="",
ylab="Energy sub metering", type="n")
lines(date.time, as.numeric(Sub_metering_1), col="black")
lines(date.time, as.numeric(Sub_metering_2), col="red")
lines(date.time, as.numeric(Sub_metering_3), col="blue")
})
legend("topright", col=c("black", "red", "blue"),
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1,
border="transparent")
border="white")
with(ass1c, {
plot(date.time, as.numeric(Sub_metering_1), main="", xlab="",
ylab="Energy sub metering", type="n")
lines(date.time, as.numeric(Sub_metering_1), col="black")
lines(date.time, as.numeric(Sub_metering_2), col="red")
lines(date.time, as.numeric(Sub_metering_3), col="blue")
})
legend("topright", col=c("black", "red", "blue"),
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1,
border="transparent")
with(ass1c, {
plot(date.time, as.numeric(Sub_metering_1), main="", xlab="",
ylab="Energy sub metering", type="n")
lines(date.time, as.numeric(Sub_metering_1), col="black")
lines(date.time, as.numeric(Sub_metering_2), col="red")
lines(date.time, as.numeric(Sub_metering_3), col="blue")
})
legend("topright", col=c("black", "red", "blue"),
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1,
border="white")
with(ass1c, {
plot(date.time, as.numeric(Sub_metering_1), main="", xlab="",
ylab="Energy sub metering", type="n")
lines(date.time, as.numeric(Sub_metering_1), col="black")
lines(date.time, as.numeric(Sub_metering_2), col="red")
lines(date.time, as.numeric(Sub_metering_3), col="blue")
})
legend("topright", col=c("black", "red", "blue"),
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1,
border="green")
?par
?legend
## Run plot1.R and plot2.R first
par(mfrow = c(2, 2))
with(ass1c, {
plot(date.time, as.numeric(Sub_metering_1), main="", xlab="",
ylab="Energy sub metering", type="n")
lines(date.time, as.numeric(Sub_metering_1), col="black")
lines(date.time, as.numeric(Sub_metering_2), col="red")
lines(date.time, as.numeric(Sub_metering_3), col="blue")
})
legend("topright", col=c("black", "red", "blue"),
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1,
fill="yellow", border="green")
## Run plot1.R and plot2.R first
par(mfrow = c(2, 2))
with(ass1c, {
plot(date.time, as.numeric(Sub_metering_1), main="", xlab="",
ylab="Energy sub metering", type="n")
lines(date.time, as.numeric(Sub_metering_1), col="black")
lines(date.time, as.numeric(Sub_metering_2), col="red")
lines(date.time, as.numeric(Sub_metering_3), col="blue")
})
legend("topright", col=c("black", "red", "blue"),
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1,
bty="n")
with(ass1c, plot(date.time, as.numeric(Global_active_power), main="", xlab="",
ylab="Global Active Power (kilowatts)", type="n"))
with(ass1c, lines(date.time, as.numeric(Global_active_power)))
with(ass1c, {
plot(date.time, as.numeric(Global_active_power), main="",
xlab="", ylab="Global Active Power", type="n"))
lines(date.time, as.numeric(Global_active_power))
})
with(ass1c, {
plot(date.time, as.numeric(Global_active_power), main="",
xlab="", ylab="Global Active Power", type="n"))
lines(date.time, as.numeric(Global_active_power))
})
with(ass1c, {
plot(date.time, as.numeric(Global_active_power), main="", xlab="", ylab="Global Active Power", type="n")
lines(date.time, as.numeric(Global_active_power))
})
with(ass1c, {
plot(date.time, as.numeric(Global_active_power), main="", xlab="", ylab="Global Active Power", type="n")
lines(date.time, as.numeric(Global_active_power))
})
par(mfcol = c(2, 2))
with(ass1c, {
plot(date.time, as.numeric(Global_active_power), main="", xlab="", ylab="Global Active Power", type="n")
lines(date.time, as.numeric(Global_active_power))
})
with(ass1c, {
plot(date.time, as.numeric(Sub_metering_1), main="", xlab="",
ylab="Energy sub metering", type="n")
lines(date.time, as.numeric(Sub_metering_1), col="black")
lines(date.time, as.numeric(Sub_metering_2), col="red")
lines(date.time, as.numeric(Sub_metering_3), col="blue")
})
legend("topright", col=c("black", "red", "blue"),
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1,
bty="n")
with(ass1c, {
plot(date.time, as.numeric(Global_active_power), main="", xlab="",
ylab="Global Active Power", type="n")
lines(date.time, as.numeric(Global_active_power))
})
with(ass1c, {
plot(date.time, as.numeric(Sub_metering_1), main="", xlab="",
ylab="Energy sub metering", type="n")
lines(date.time, as.numeric(Sub_metering_1), col="black")
lines(date.time, as.numeric(Sub_metering_2), col="red")
lines(date.time, as.numeric(Sub_metering_3), col="blue")
})
legend("topright", col=c("black", "red", "blue"),
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1,
bty="n")
## Run plot1.R and plot2.R first
par(mfcol = c(2, 2))
with(ass1c, {
plot(date.time, as.numeric(Global_active_power), main="", xlab="",
ylab="Global Active Power", type="n")
lines(date.time, as.numeric(Global_active_power))
})
with(ass1c, {
plot(date.time, as.numeric(Sub_metering_1), main="", xlab="",
ylab="Energy sub metering", type="n")
lines(date.time, as.numeric(Sub_metering_1), col="black")
lines(date.time, as.numeric(Sub_metering_2), col="red")
lines(date.time, as.numeric(Sub_metering_3), col="blue")
})
legend("topright", col=c("black", "red", "blue"),
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1,
bty="n")
with(ass1c, {
plot(date.time, as.numeric(Voltage), main="", xlab="", type="n")
lines(date.time, as.numeric(Voltage))
plot(date.time, as.numeric(Global_reactive_power), main="",
xlab="", type="n")
lines(date.time, as.numeric(Global_reactive_power))
})
## Run plot1.R and plot2.R first
par(mfcol = c(2, 2))
with(ass1c, {
plot(date.time, as.numeric(Global_active_power), main="", xlab="",
ylab="Global Active Power", type="n")
lines(date.time, as.numeric(Global_active_power))
})
with(ass1c, {
plot(date.time, as.numeric(Sub_metering_1), main="", xlab="",
ylab="Energy sub metering", type="n")
lines(date.time, as.numeric(Sub_metering_1), col="black")
lines(date.time, as.numeric(Sub_metering_2), col="red")
lines(date.time, as.numeric(Sub_metering_3), col="blue")
})
legend("topright", col=c("black", "red", "blue"),
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty=1, bty="n")
with(ass1c, {
plot(date.time, as.numeric(Voltage), main="",
xlab="datetime", ylab="Voltage", type="n")
lines(date.time, as.numeric(Voltage))
plot(date.time, as.numeric(Global_reactive_power), main="",
xlab="datetime", ylab="Global_reactive_power", type="n")
lines(date.time, as.numeric(Global_reactive_power))
})
## Run plot1.R and plot2.R first
par(mfcol = c(2, 2))
with(ass1c, {
plot(date.time, as.numeric(Global_active_power), main="", xlab="",
ylab="Global Active Power", type="n")
lines(date.time, as.numeric(Global_active_power))
})
with(ass1c, {
plot(date.time, as.numeric(Sub_metering_1), main="", xlab="",
ylab="Energy sub metering", type="n")
lines(date.time, as.numeric(Sub_metering_1), col="black")
lines(date.time, as.numeric(Sub_metering_2), col="red")
lines(date.time, as.numeric(Sub_metering_3), col="blue")
})
legend("topright", col=c("black", "red", "blue"),
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty=1, bty="n")
with(ass1c, {
plot(date.time, as.numeric(Voltage), main="",
xlab="datetime", ylab="Voltage", type="n")
lines(date.time, as.numeric(Voltage))
plot(date.time, as.numeric(Global_reactive_power), main="",
xlab="datetime", ylab="Global_reactive_power", type="n")
lines(date.time, as.numeric(Global_reactive_power))
})
par(mfcol=c(1,1))
hist(as.numeric(ass1a$Global_active_power), xlab="Global Active Power (kilowatts)",
main="Global Active Power", col="red")
?dev.copy
png(file="Coursera/plot1.png", width=480, height=480)
hist(as.numeric(ass1a$Global_active_power), xlab="Global Active Power (kilowatts)",
main="Global Active Power", col="red")
dev.off()
png(file="Coursera/plot2.png", width=480, height=480)
par(mfcol=c(1,1))
with(ass1c, plot(date.time, as.numeric(Global_active_power), main="", xlab="",
ylab="Global Active Power (kilowatts)", type="n"))
with(ass1c, lines(date.time, as.numeric(Global_active_power)))
dev.off()
dev.off()
## Run plot1.R and plot2.R first
png(file="Coursera/plot3.png", width=480, height=480)
par(mfcol=c(1,1))
with(ass1c, plot(date.time, as.numeric(Sub_metering_1), main="", xlab="",
ylab="Energy sub metering", type="n"))
with(ass1c, lines(date.time, as.numeric(Sub_metering_1), col="black"))
with(ass1c, lines(date.time, as.numeric(Sub_metering_2), col="red"))
with(ass1c, lines(date.time, as.numeric(Sub_metering_3), col="blue"))
legend("topright", col=c("black", "red", "blue"),
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1)
dev.off()
## Run plot1.R and plot2.R first
png(file="Coursera/plot4.png", width=480, height=480)
par(mfcol = c(2, 2))
with(ass1c, {
plot(date.time, as.numeric(Global_active_power), main="", xlab="",
ylab="Global Active Power", type="n")
lines(date.time, as.numeric(Global_active_power))
})
with(ass1c, {
plot(date.time, as.numeric(Sub_metering_1), main="", xlab="",
ylab="Energy sub metering", type="n")
lines(date.time, as.numeric(Sub_metering_1), col="black")
lines(date.time, as.numeric(Sub_metering_2), col="red")
lines(date.time, as.numeric(Sub_metering_3), col="blue")
})
legend("topright", col=c("black", "red", "blue"),
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty=1, bty="n")
with(ass1c, {
plot(date.time, as.numeric(Voltage), main="",
xlab="datetime", ylab="Voltage", type="n")
lines(date.time, as.numeric(Voltage))
plot(date.time, as.numeric(Global_reactive_power), main="",
xlab="datetime", ylab="Global_reactive_power", type="n")
lines(date.time, as.numeric(Global_reactive_power))
})
dev.off()
par(mfcol=c(1,1))
hist(as.numeric(ass1a$Global_active_power), xlab="Global Active Power (kilowatts)",
main="Global Active Power", col="red")
library(nlme)
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
library(lattice)
library(datasets)
xyplot(Ozone ~ Wind, data = airquality)
library(nlme)
xyplot(weight~Time | Diet, BodyWeight)
?lattice
?xyplot
xyplot(weight~Time | Diet, BodyWeight, text="TEST")
xyplot(weight~Time | Diet, BodyWeight, text(xlab="TEST"))
xyplot(weight~Time | Diet, BodyWeight, lines(xlab="TEST"))
xyplot(weight~Time | Diet, BodyWeight, llines(xlab="TEST"))
xyplot(weight~Time | Diet, BodyWeight, points(xlab="TEST"))
xyplot(weight~Time | Diet, BodyWeight, points(title="TEST"))
xyplot(weight~Time | Diet, BodyWeight, llines(title="TEST"))
xyplot(weight~Time | Diet, BodyWeight, lines(title="TEST"))
xyplot(weight~Time | Diet, BodyWeight, text(title="TEST"))
?splom
?trellis.par.set
?points
?lines
?llines
?text
## Coursera - Exploratory Data Analysis - Plotting Assignment 1
##
## plot1.R - generates plot1.png
## Downloading the data and putting it in a local file
filename = "exdata_plotting1.zip"
if (!file.exists(filename)) {
retval = download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",
destfile = filename,
method = "curl")
}
## Reading the data
df.power = read.csv(unz(filename, "household_power_consumption.txt"), header=T,
sep=";", stringsAsFactors=F, na.strings="?",
colClasses=c("character", "character", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
## Formatting the date and subsetting the data
df.power$Date = as.Date(df.power$Date, format="%d/%m/%Y")
startDate = as.Date("01/02/2007", format="%d/%m/%Y")
endDate = as.Date("02/02/2007", format="%d/%m/%Y")
df.power = df.power[df.power$Date >= startDate & df.power$Date <= endDate, ]
## Creating the plot
png(filename="plot1.png", width=480, height=480)
hist(df.power$Global_active_power, main="Global Active Power",
xlab="Global Active Power (kilowatts)", col="red")
dev.off()
filename = "exdata_plotting1.zip"
if (!file.exists(filename)) {
retval = download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",
destfile = filename,
method = "curl")
}
df.power = read.csv(unz(filename, "household_power_consumption.txt"), header=T,
sep=";", stringsAsFactors=F, na.strings="?",
colClasses=c("character", "character", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
plot(ass1c$date.time, ass1c$Sub_metering_1, type="l", xlab="",
ylab="Energy sub metering")
lines(ass1c$date.time, ass1c$Sub_metering_2, col="red")
lines(ass1c$date.time, ass1c$Sub_metering_3, col="blue")
legend("topright", legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
col=c("black", "red", "blue"), lwd=par("lwd"))
plot(ass1c$date.time, ass1c$Sub_metering_1, type="l", xlab="",
ylab="Energy sub metering")
?lwd
?par
?legend
library(http)
install.packages("http")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", "21a3aec13a8d770f9184")
?oauth_app
myapp <- oauth_app("github", "2b086ac5bd4b5f7909a50a5d32ac5707cf9582c6")
myapp <- oauth_app("github", "21a3aec13a8d770f9184", "2b086ac5bd4b5f7909a50a5d32ac5707cf9582c6")
myapp
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("httpuv")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httpuv)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
q()
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httpuv)
library(httr)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
myapp <- oauth_app("github", "2b086ac5bd4b5f7909a50a5d32ac5707cf9582c6")
myapp <- oauth_app("github", "21a3aec13a8d770f9184", "2b086ac5bd4b5f7909a50a5d32ac5707cf9582c6")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
win <- content(req)
xmlTreeParse(win)
library(xml)
install.packages("XML")
library(XML)
xmlTreeParse(win)
dwin <- xmlTreeParse(win, useInternal=TRUE)
win[[1]]
names(win[[1]])
win[[1]][[45]]
win[[1]][45]
win[[1]][2]
win[[1]][7]
names(win[[2]]
)
win[[2]][45]
win[[2]][45]
win[[2]][2]
xpathSApply(win, "//name", xmlValue)
win$name
win[[]][2]
win[[,]][2]
str(win)
f <- function(s) s[[1]][2]
sapply(win, f)
sapply(f, win)
f <- function(s) s[[1]]
sapply(f, win)
sapply(win, f)
f <- function(s) s[[2]]
sapply(win, f)
win[[5]][45]
q()
win[[5]][45]
fileURL
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
s <- c(10,5,8,5,8,5,8,5,8)
t1 <- read.fwf(fileURL, skip=4, widths=s, header=TRUE)
head(fileURL)
head(readLines(fileURL))
t1 <- read.fwf(fileURL, skip=3, widths=s, header=TRUE)
t1 <- read.fwf(fileURL, skip=3, widths=s)
head(t1,10)
s
?sapply
s2 <- c(10,5,4,1,3,5,4,1,3,5,4,1,3,5,4,1,3)
t1 <- read.fwf(fileURL, skip=3, widths=s2)
head(t1,10)
sum(t1$V7)
head(t1$V7,10)
t1 <- read.fwf(fileURL, skip=4, widths=s2)
head(t1,10)
sum(t1$V7)
sum(t1$V5)
sum(t1$V9)
fileURL <- "https://s3.amazonaws.com/coursera-uploads/user-a22652591be5f227164ed3f6/972584/asst-3/0322d8c02b9e11e4bd14e10d5d6f8668.txt"
read.table(fileURL)
t <- read.table(fileURL)
str(t)
file <- "C:\Users\pribis\Documents\Coursera\datasciencecoursera"
file <- "~/Documents\Coursera\datasciencecoursera"
file <- "~\Documents\Coursera\datasciencecoursera"
file <- "~/Documents/Coursera/datasciencecoursera/Course3ProjSolution.txt"
myt <- read.table(file)
file <- "Documents/Coursera/datasciencecoursera/Course3ProjSolution.txt"
myt <- read.table(file)
setwd("Documents")
ls()
printwd()
getwd)
getwd()
setwd("Coursera/datasciencecoursera")
file <- "Course3ProjSolution.txt"
myt <- read.table(file)
str(myt)
t <- read.table(fileURL)
str(t)
str(myt)
fileURL <- "https://s3.amazonaws.com/coursera-uploads/user-4145e41d52ac9eabf4f67879/972584/asst-3/69c358102bcc11e49da44b7c62fdf014.txt"
t <- read.table(fileURL)
str(t)
fileURL <- "https://s3.amazonaws.com/coursera-uploads/user-11b351d89ba94c72159c2ac1/972584/asst-3/cc9d61b02bc711e49e277d32c7635d49.txt"
t <- read.table(fileURL)
str(t)
fileURL <- "https://s3.amazonaws.com/coursera-uploads/user-f726dfba4551e12efc18e864/972584/asst-3/f4a1b7502bc811e4a78133775d6697e0.txt"
t <- read.table(fileURL)
str(t)
